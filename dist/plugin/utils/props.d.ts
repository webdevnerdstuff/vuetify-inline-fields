export declare const defaultCardProps: {
    elevation: number;
    variant: string;
};
export declare const sharedProps: {
    cancelButtonColor: string;
    cancelButtonSize: string;
    cancelButtonTitle: string;
    cancelButtonVariant: "text";
    cancelIcon: undefined;
    cancelIconColor: string;
    cardField: boolean;
    cardOffsetX: number;
    cardOffsetY: number;
    cardProps: () => {};
    cell: boolean;
    cellUnderlineFullWidth: boolean;
    closeSiblings: boolean;
    color: string;
    density: "compact";
    disabled: boolean;
    displayAppendIcon: undefined;
    displayAppendIconColor: undefined;
    displayAppendIconSize: string;
    displayAppendInnerIcon: undefined;
    displayAppendInnerIconColor: undefined;
    displayAppendInnerIconSize: string;
    displayPrependIcon: undefined;
    displayPrependIconColor: undefined;
    displayPrependIconSize: string;
    displayPrependInnerIcon: undefined;
    displayPrependInnerIconColor: undefined;
    displayPrependInnerIconSize: string;
    emptyText: string;
    error: boolean;
    fieldOnly: boolean;
    hideCancelIcon: boolean;
    hideDetails: boolean;
    label: string;
    loading: boolean;
    loadingWait: boolean;
    name: string;
    required: boolean;
    tableField: boolean;
    underlineColor: string;
    underlineStyle: string;
    underlineWidth: string;
    underlined: boolean;
    valueColor: string;
};
declare const checkboxProps: {
    falseIcon: undefined;
    icons: boolean;
    trueIcon: undefined;
    hideCancelIcon: boolean;
    hideSaveIcon: boolean;
    loadingIcon: undefined;
    loadingIconColor: string;
    saveButtonColor: string;
    saveButtonSize: string;
    saveButtonTitle: string;
    saveButtonVariant: "text";
    saveIcon: undefined;
    saveIconColor: string;
    falseValue: boolean;
    iconFalse: undefined;
    iconFalseColor: string;
    iconFalseTitle: string;
    iconTrue: undefined;
    iconTrueColor: string;
    iconTrueTitle: string;
    trueValue: boolean;
    cancelButtonColor: string;
    cancelButtonSize: string;
    cancelButtonTitle: string;
    cancelButtonVariant: "text";
    cancelIcon: undefined;
    cancelIconColor: string;
    cardField: boolean;
    cardOffsetX: number;
    cardOffsetY: number;
    cardProps: () => {};
    cell: boolean;
    cellUnderlineFullWidth: boolean;
    closeSiblings: boolean;
    color: string;
    density: "compact";
    disabled: boolean;
    displayAppendIcon: undefined;
    displayAppendIconColor: undefined;
    displayAppendIconSize: string;
    displayAppendInnerIcon: undefined;
    displayAppendInnerIconColor: undefined;
    displayAppendInnerIconSize: string;
    displayPrependIcon: undefined;
    displayPrependIconColor: undefined;
    displayPrependIconSize: string;
    displayPrependInnerIcon: undefined;
    displayPrependInnerIconColor: undefined;
    displayPrependInnerIconSize: string;
    emptyText: string;
    error: boolean;
    fieldOnly: boolean;
    hideDetails: boolean;
    label: string;
    loading: boolean;
    loadingWait: boolean;
    name: string;
    required: boolean;
    tableField: boolean;
    underlineColor: string;
    underlineStyle: string;
    underlineWidth: string;
    underlined: boolean;
    valueColor: string;
};
declare const selectProps: {
    clearIcon: undefined;
    clearable: boolean;
    hideSelected: boolean;
    itemTitle: string;
    itemValue: string;
    items: () => never[];
    menu: boolean;
    variant: "underlined";
    hideCancelIcon: boolean;
    hideSaveIcon: boolean;
    loadingIcon: undefined;
    loadingIconColor: string;
    saveButtonColor: string;
    saveButtonSize: string;
    saveButtonTitle: string;
    saveButtonVariant: "text";
    saveIcon: undefined;
    saveIconColor: string;
    autofocus: boolean;
    cancelButtonColor: string;
    cancelButtonSize: string;
    cancelButtonTitle: string;
    cancelButtonVariant: "text";
    cancelIcon: undefined;
    cancelIconColor: string;
    cardField: boolean;
    cardOffsetX: number;
    cardOffsetY: number;
    cardProps: () => {};
    cell: boolean;
    cellUnderlineFullWidth: boolean;
    closeSiblings: boolean;
    color: string;
    density: "compact";
    disabled: boolean;
    displayAppendIcon: undefined;
    displayAppendIconColor: undefined;
    displayAppendIconSize: string;
    displayAppendInnerIcon: undefined;
    displayAppendInnerIconColor: undefined;
    displayAppendInnerIconSize: string;
    displayPrependIcon: undefined;
    displayPrependIconColor: undefined;
    displayPrependIconSize: string;
    displayPrependInnerIcon: undefined;
    displayPrependInnerIconColor: undefined;
    displayPrependInnerIconSize: string;
    emptyText: string;
    error: boolean;
    fieldOnly: boolean;
    hideDetails: boolean;
    label: string;
    loading: boolean;
    loadingWait: boolean;
    name: string;
    required: boolean;
    tableField: boolean;
    underlineColor: string;
    underlineStyle: string;
    underlineWidth: string;
    underlined: boolean;
    valueColor: string;
};
declare const switchProps: {
    falseIcon: string;
    icons: boolean;
    hideCancelIcon: boolean;
    hideSaveIcon: boolean;
    loadingIcon: undefined;
    loadingIconColor: string;
    saveButtonColor: string;
    saveButtonSize: string;
    saveButtonTitle: string;
    saveButtonVariant: "text";
    saveIcon: undefined;
    saveIconColor: string;
    falseValue: boolean;
    iconFalse: undefined;
    iconFalseColor: string;
    iconFalseTitle: string;
    iconTrue: undefined;
    iconTrueColor: string;
    iconTrueTitle: string;
    trueValue: boolean;
    cancelButtonColor: string;
    cancelButtonSize: string;
    cancelButtonTitle: string;
    cancelButtonVariant: "text";
    cancelIcon: undefined;
    cancelIconColor: string;
    cardField: boolean;
    cardOffsetX: number;
    cardOffsetY: number;
    cardProps: () => {};
    cell: boolean;
    cellUnderlineFullWidth: boolean;
    closeSiblings: boolean;
    color: string;
    density: "compact";
    disabled: boolean;
    displayAppendIcon: undefined;
    displayAppendIconColor: undefined;
    displayAppendIconSize: string;
    displayAppendInnerIcon: undefined;
    displayAppendInnerIconColor: undefined;
    displayAppendInnerIconSize: string;
    displayPrependIcon: undefined;
    displayPrependIconColor: undefined;
    displayPrependIconSize: string;
    displayPrependInnerIcon: undefined;
    displayPrependInnerIconColor: undefined;
    displayPrependInnerIconSize: string;
    emptyText: string;
    error: boolean;
    fieldOnly: boolean;
    hideDetails: boolean;
    label: string;
    loading: boolean;
    loadingWait: boolean;
    name: string;
    required: boolean;
    tableField: boolean;
    underlineColor: string;
    underlineStyle: string;
    underlineWidth: string;
    underlined: boolean;
    valueColor: string;
};
declare const textareaProps: {
    autoGrow: boolean;
    rows: number;
    truncateLength: undefined;
    truncateSuffix: string;
    variant: "underlined";
    cancelButtonColor: string;
    cancelButtonSize: string;
    cancelButtonTitle: string;
    cancelButtonVariant: "text";
    cancelIcon: undefined;
    cancelIconColor: string;
    cardField: boolean;
    cardOffsetX: number;
    cardOffsetY: number;
    cardProps: () => {};
    cell: boolean;
    cellUnderlineFullWidth: boolean;
    closeSiblings: boolean;
    color: string;
    density: "compact";
    disabled: boolean;
    displayAppendIcon: undefined;
    displayAppendIconColor: undefined;
    displayAppendIconSize: string;
    displayAppendInnerIcon: undefined;
    displayAppendInnerIconColor: undefined;
    displayAppendInnerIconSize: string;
    displayPrependIcon: undefined;
    displayPrependIconColor: undefined;
    displayPrependIconSize: string;
    displayPrependInnerIcon: undefined;
    displayPrependInnerIconColor: undefined;
    displayPrependInnerIconSize: string;
    emptyText: string;
    error: boolean;
    fieldOnly: boolean;
    hideCancelIcon: boolean;
    hideDetails: boolean;
    label: string;
    loading: boolean;
    loadingWait: boolean;
    name: string;
    required: boolean;
    tableField: boolean;
    underlineColor: string;
    underlineStyle: string;
    underlineWidth: string;
    underlined: boolean;
    valueColor: string;
    hideSaveIcon: boolean;
    loadingIcon: undefined;
    loadingIconColor: string;
    saveButtonColor: string;
    saveButtonSize: string;
    saveButtonTitle: string;
    saveButtonVariant: "text";
    saveIcon: undefined;
    saveIconColor: string;
    autofocus: boolean;
};
declare const textFieldProps: {
    truncateLength: undefined;
    truncateSuffix: string;
    variant: "underlined";
    hideCancelIcon: boolean;
    hideSaveIcon: boolean;
    loadingIcon: undefined;
    loadingIconColor: string;
    saveButtonColor: string;
    saveButtonSize: string;
    saveButtonTitle: string;
    saveButtonVariant: "text";
    saveIcon: undefined;
    saveIconColor: string;
    autofocus: boolean;
    cancelButtonColor: string;
    cancelButtonSize: string;
    cancelButtonTitle: string;
    cancelButtonVariant: "text";
    cancelIcon: undefined;
    cancelIconColor: string;
    cardField: boolean;
    cardOffsetX: number;
    cardOffsetY: number;
    cardProps: () => {};
    cell: boolean;
    cellUnderlineFullWidth: boolean;
    closeSiblings: boolean;
    color: string;
    density: "compact";
    disabled: boolean;
    displayAppendIcon: undefined;
    displayAppendIconColor: undefined;
    displayAppendIconSize: string;
    displayAppendInnerIcon: undefined;
    displayAppendInnerIconColor: undefined;
    displayAppendInnerIconSize: string;
    displayPrependIcon: undefined;
    displayPrependIconColor: undefined;
    displayPrependIconSize: string;
    displayPrependInnerIcon: undefined;
    displayPrependInnerIconColor: undefined;
    displayPrependInnerIconSize: string;
    emptyText: string;
    error: boolean;
    fieldOnly: boolean;
    hideDetails: boolean;
    label: string;
    loading: boolean;
    loadingWait: boolean;
    name: string;
    required: boolean;
    tableField: boolean;
    underlineColor: string;
    underlineStyle: string;
    underlineWidth: string;
    underlined: boolean;
    valueColor: string;
};
export { checkboxProps, selectProps, switchProps, textFieldProps, textareaProps, };
